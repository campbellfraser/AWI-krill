remove(krillYEAR,krillPie,tempMonth,labelPos)
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD))
for (j in krillYEAR$date.YMD){
krillYEAR$specMonth=(stri_sub(krillYEAR$date.YMD,6,7))
monthlyLipids = data.frame()
badMonth = c()
n=1
for (u in monthNums){
tempMonth = dplyr::filter(krillYEAR,grepl(u,specMonth))
monthSum = sum(tempMonth$Lipids,na.rm=TRUE)
monthMean = monthSum/length(tempMonth$specMonth)
if (((is.nan(monthMean)==TRUE|(monthMean==0)==TRUE))==TRUE){ # Surely there's an easier way to do this? Oh well...
monthlyLipids = rbind(monthlyLipids,c(0,u,i))
krill_pal[as.numeric(u)] = "#454545"
badMonth[n] = as.numeric(u)
n=n+1
} else {
monthlyLipids = rbind(monthlyLipids,c(monthMean,u,i))}
}
colnames(monthlyLipids) = c("lipidMean","Month","Year")
monthlyLipids$lipidMean = as.numeric(monthlyLipids$lipidMean)
monthlyLipids$Month = as.factor(monthlyLipids$Month)
monthlyLipids$Year = as.character(monthlyLipids$Year)
labelPos = monthlyLipids %>%
mutate(csum = rev(cumsum(rev(lipidMean))),
pos = lipidMean/2 + lead(csum, 1),
pos = if_else(is.na(pos), lipidMean/2, pos,))
labelPos$pos[badMonth] = NA
krillPie = ggplot(monthlyLipids,aes(x=Year,y=lipidMean,fill=Month)) +
geom_bar(stat="identity",
width=1,
color="white") +
coord_polar("y",start=0,direction=-1,clip="off") +
theme_void() +
scale_fill_manual(labels=c(allMonths),values=krill_pal) +
geom_label_repel(labelPos, mapping=aes(y=pos, label=paste0(round(lipidMean,digits=2),"mg")),
size = 3, nudge_x = 0.7, show.legend = FALSE, na.rm = TRUE) +
ggtitle(i,subtitle=paste(as.character(round((sum(krillYEAR$Lipids,na.rm=TRUE)/1000),digits=2)), "g total")) + theme(plot.title = element_text(size = 16.5, face = "bold"), plot.subtitle = element_text(size = 15), legend.key.height=unit(0.5,"cm"),legend.title=element_text(size=18,face="bold"),legend.text=element_text(size=17))
assign(paste0("krill",i),krillPie)
}
}
# Combined plot ####
pieFestival = plot_grid(krill2011,krill2012,krill2013,krill2014,krill2015,krill2016,krill2017,krill2018,krill2019,krill2020,krill2021)
title = ggdraw() +
draw_label("Monthly Mean Omega-3 Content of Krill Stomachs (2011-2022)",
fontface = "bold",
size = 17.5,
x = 0,
hjust = 0) +
theme(plot.margin = margin(0,0,0,7))
plot_grid(
title,pieFestival,
ncol = 1,
rel_heights = c(0.1,1))
gc()
gc()
# 14/09/2022 | Pie charts for each year to illustrate mean monthly lipid content
#Prerequisites ####
source("prerequisites.R")
# Looop! ####
for (i in years){
print(i)
krill_pal = hue_pal()(12)
remove(krillYEAR,krillPie,tempMonth,labelPos)
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD))
for (j in krillYEAR$date.YMD){
krillYEAR$specMonth=(stri_sub(krillYEAR$date.YMD,6,7))
monthlyLipids = data.frame()
badMonth = c()
n=1
for (u in monthNums){
tempMonth = dplyr::filter(krillYEAR,grepl(u,specMonth))
monthSum = sum(tempMonth$Lipids,na.rm=TRUE)
monthMean = monthSum/length(tempMonth$specMonth)
if (((is.nan(monthMean)==TRUE|(monthMean==0)==TRUE))==TRUE){ # Surely there's an easier way to do this? Oh well...
monthlyLipids = rbind(monthlyLipids,c(0,u,i))
krill_pal[as.numeric(u)] = "#454545"
badMonth[n] = as.numeric(u)
n=n+1
} else {
monthlyLipids = rbind(monthlyLipids,c(monthMean,u,i))}
}
colnames(monthlyLipids) = c("lipidMean","Month","Year")
monthlyLipids$lipidMean = as.numeric(monthlyLipids$lipidMean)
monthlyLipids$Month = as.factor(monthlyLipids$Month)
monthlyLipids$Year = as.character(monthlyLipids$Year)
labelPos = monthlyLipids %>%
mutate(csum = rev(cumsum(rev(lipidMean))),
pos = lipidMean/2 + lead(csum, 1),
pos = if_else(is.na(pos), lipidMean/2, pos,))
labelPos$pos[badMonth] = NA
krillPie = ggplot(monthlyLipids,aes(x=Year,y=lipidMean,fill=Month)) +
geom_bar(stat="identity",
width=1,
color="white") +
coord_polar("y",start=0,direction=-1,clip="off") +
theme_void() +
scale_fill_manual(labels=c(allMonths),values=krill_pal) +
geom_label_repel(labelPos, mapping=aes(y=pos, label=paste0(round(lipidMean,digits=2),"mg")),
size = 3, nudge_x = 0.7, show.legend = FALSE, na.rm = TRUE) +
ggtitle(i,subtitle=paste(as.character(round((sum(krillYEAR$Lipids,na.rm=TRUE)/1000),digits=2)), "g total")) + theme(plot.title = element_text(size = 16.5, face = "bold"), plot.subtitle = element_text(size = 15),legend.title=element_text(size=8.5,face="bold"),legend.text=element_text(size=8))
assign(paste0("krill",i),krillPie)
}
}
pieFestival = plot_grid(krill2011,krill2012,krill2013,krill2014,krill2015,krill2016,krill2017,krill2018,krill2019,krill2020,krill2021)
title = ggdraw() +
draw_label("Monthly Mean Omega-3 Content of Krill Stomachs (2011-2022)",
fontface = "bold",
size = 17.5,
x = 0,
hjust = 0) +
theme(plot.margin = margin(0,0,0,7))
plot_grid(
title,pieFestival,
ncol = 1,
rel_heights = c(0.1,1))
save(krill2011,krill2012,krill2013,krill2014,krill2015,krill2016,krill2017,krill2018,krill2019,krill2020,krill2021, file = "krillOBJECTS.RData")
save(krill2011,krill2012,krill2013,krill2014,krill2015,krill2016,krill2017,krill2018,krill2019,krill2020,krill2021, file = "krillOBJECTS.RData")
```{r, fig.height = 10, fig.width = 7, fig.align = "center"}
pieFestival = plot_grid(krill2011,krill2012,krill2013,krill2014,krill2015,krill2016,krill2017,krill2018,krill2019,krill2020,krill2021)
install.packages("tmap")
library(tmap)
data("world")
data("World")
tm_shape(World) + tm_polygons("HPI")
library(maps)
library(spData)
bremerhaven = read_sf("bremerhaven.shp")
library(sf)
bremerhaven = read_sf("bremerhaven.shp")
bremerhaven = read_sf("bremerhaven.shp")
SHAPE_RESTORE_SHX
st_drivers()
bremerhaven = read_sf("bremerhaven.shx")
bremen = read_sf("bremen.shp")
install.packages("mapdeck")
library(mapdeck)
set_token()
set_token(pk.eyJ1IjoiZnJhc2VyY2FtcGJlbGwiLCJhIjoiY2w4azBhaHV6MDNhbTN3bGFjN2g4ejNhcSJ9.mqesmSpCfvicjq8SSIMrzA)
set_token("pk.eyJ1IjoiZnJhc2VyY2FtcGJlbGwiLCJhIjoiY2w4azBhaHV6MDNhbTN3bGFjN2g4ejNhcSJ9.mqesmSpCfvicjq8SSIMrzA")
token="pk.eyJ1IjoiZnJhc2VyY2FtcGJlbGwiLCJhIjoiY2w4azBhaHV6MDNhbTN3bGFjN2g4ejNhcSJ9.mqesmSpCfvicjq8SSIMrzA"
mapdeck(token=token) %>% add_path(data=bremen)
install.packages("distill")
library(distill)
1-WAY ANOVA testing if there is a significant difference between Jul/Aug each year ####
# Assumptions: the observations are independent, the data are normally distributed (shapiro test), and the data has a homogeneity of variance (levene's test)
#shapiro.test(seasonalLipids$Lipids) # p-val < 0.05, non-normal
#leveneTest(Lipids~Year,seasonalLipids) # p-val <<<< 0.05, non-homogeneous
#seasonalLipids$logLipids = log10(seasonalLipids$Lipids)
#shapiro.test(seasonalLipids$logLipids) # p-val > 0.05, normal
#
# Krill stats
source("prerequisites.R")
# Krill stats
source("prerequisites.R")
inspectaMonth = readline(prompt="Months: ") %>%
strsplit("[[:space:]]") %>%
unlist()
seasonalLipids = data.frame()
for (i in years){
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD)) #Filter into one year, since I need to record the year
for (j in inspectaMonth){
MONTHkrill = dplyr::filter(krillYEAR,grepl(paste0("-",j,"-"),date.YMD))
MONTHsum = sum(MONTHkrill$Lipids,na.rm=TRUE)
MONTHmean = MONTHsum/length(MONTHkrill$date.YMD)
MONTHsd = sd(MONTHkrill$Lipids,na.rm=TRUE)
seasonalLipids = rbind(seasonalLipids,c(i,MONTHmean,j,MONTHsd))
}
}
colnames(seasonalLipids) = c("Year","Lipids","Month","SD")
seasonalLipids$Lipids = as.numeric(seasonalLipids$Lipids)
seasonalLipids$Month = as.factor(seasonalLipids$Month)
seasonalLipids$SD = as.numeric(seasonalLipids$SD)
seasonalLipids[seasonalLipids==0] = NA
krillCocktail = ggplot(seasonalLipids,aes(x=Year,y=Lipids,fill=Month)) +
geom_bar(stat="identity",position=position_dodge(0.9)) +
scale_fill_discrete(labels=allMonthsLong[as.numeric(inspectaMonth)]) +
geom_errorbar(aes(ymin=Lipids,ymax=Lipids+SD),position=position_dodge(0.9),width=0.2) +
ggtitle("Mean omega-3 Content of Krill Stomachs") +
labs(y="Mean Omega-3 Content (mg)")
krillCocktail
# From this bar graph, we would expect to see more successful spawning in Austral Spring of: 2011, 2014, 2015, 2016, and 2020, since the availability of lipids appears to increase
# So what statistical tests can I do to this data? I have lipid content (continuous), and months (categorical). I can compare the means of each Jul/Aug, to see if they differ significantly - that would be a one-way ANOVA.
# 1-WAY ANOVA testing if there is a significant difference between Jul/Aug each year ####
# Assumptions: the observations are independent, the data are normally distributed (shapiro test), and the data has a homogeneity of variance (levene's test)
#shapiro.test(seasonalLipids$Lipids) # p-val < 0.05, non-normal
#leveneTest(Lipids~Year,seasonalLipids) # p-val <<<< 0.05, non-homogeneous
#seasonalLipids$logLipids = log10(seasonalLipids$Lipids)
#shapiro.test(seasonalLipids$logLipids) # p-val > 0.05, normal
#leveneTest(logLipids~Year,seasonalLipids) # p-val <<< 0.05, non-homogeneous
# Krill stats
source("prerequisites.R")
inspectaMonth = readline(prompt="Months: ") %>%
strsplit("[[:space:]]") %>%
unlist()
colnames(seasonalLipids) = c("Year","Lipids","Month","SD")
seasonalLipids$Lipids = as.numeric(seasonalLipids$Lipids)
seasonalLipids$Month = as.factor(seasonalLipids$Month)
seasonalLipids$SD = as.numeric(seasonalLipids$SD)
seasonalLipids[seasonalLipids==0] = NA
krillCocktail = ggplot(seasonalLipids,aes(x=Year,y=Lipids,fill=Month)) +
geom_bar(stat="identity",position=position_dodge(0.9)) +
scale_fill_discrete(labels=allMonthsLong[as.numeric(inspectaMonth)]) +
geom_errorbar(aes(ymin=Lipids,ymax=Lipids+SD),position=position_dodge(0.9),width=0.2) +
ggtitle("Mean omega-3 Content of Krill Stomachs") +
labs(y="Mean Omega-3 Content (mg)")
krillCocktail
seasonalLipids = data.frame()
for (i in years){
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD)) #Filter into one year, since I need to record the year
for (j in inspectaMonth){
MONTHkrill = dplyr::filter(krillYEAR,grepl(paste0("-",j,"-"),date.YMD))
MONTHsum = sum(MONTHkrill$Lipids,na.rm=TRUE)
MONTHmean = MONTHsum/length(MONTHkrill$date.YMD)
MONTHsd = sd(MONTHkrill$Lipids,na.rm=TRUE)
seasonalLipids = rbind(seasonalLipids,c(i,MONTHmean,j,MONTHsd))
}
}
colnames(seasonalLipids) = c("Year","Lipids","Month","SD")
seasonalLipids$Lipids = as.numeric(seasonalLipids$Lipids)
seasonalLipids$Month = as.factor(seasonalLipids$Month)
seasonalLipids$SD = as.numeric(seasonalLipids$SD)
seasonalLipids[seasonalLipids==0] = NA
krillCocktail = ggplot(seasonalLipids,aes(x=Year,y=Lipids,fill=Month)) +
geom_bar(stat="identity",position=position_dodge(0.9)) +
scale_fill_discrete(labels=allMonthsLong[as.numeric(inspectaMonth)]) +
geom_errorbar(aes(ymin=Lipids,ymax=Lipids+SD),position=position_dodge(0.9),width=0.2) +
ggtitle("Mean omega-3 Content of Krill Stomachs") +
labs(y="Mean Omega-3 Content (mg)")
krillCocktail
inspectaMonth = readline(prompt="Months: ") %>%
strsplit("[[:space:]]") %>%
unlist()
seasonalLipids = data.frame()
for (i in years){
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD)) #Filter into one year, since I need to record the year
for (j in inspectaMonth){
MONTHkrill = dplyr::filter(krillYEAR,grepl(paste0("-",j,"-"),date.YMD))
MONTHsum = sum(MONTHkrill$Lipids,na.rm=TRUE)
MONTHmean = MONTHsum/length(MONTHkrill$date.YMD)
MONTHsd = sd(MONTHkrill$Lipids,na.rm=TRUE)
seasonalLipids = rbind(seasonalLipids,c(i,MONTHmean,j,MONTHsd))
}
}
colnames(seasonalLipids) = c("Year","Lipids","Month","SD")
seasonalLipids$Lipids = as.numeric(seasonalLipids$Lipids)
seasonalLipids$Month = as.factor(seasonalLipids$Month)
seasonalLipids$SD = as.numeric(seasonalLipids$SD)
seasonalLipids[seasonalLipids==0] = NA
krillCocktail = ggplot(seasonalLipids,aes(x=Year,y=Lipids,fill=Month)) +
geom_bar(stat="identity",position=position_dodge(0.9)) +
scale_fill_discrete(labels=allMonthsLong[as.numeric(inspectaMonth)]) +
geom_errorbar(aes(ymin=Lipids,ymax=Lipids+SD),position=position_dodge(0.9),width=0.2) +
ggtitle("Mean omega-3 Content of Krill Stomachs") +
labs(y="Mean Omega-3 Content (mg)")
krillCocktail
inspectaMonth = readline(prompt="Months: ") %>%
strsplit("[[:space:]]") %>%
unlist()
seasonalLipids = data.frame()
for (i in years){
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD)) #Filter into one year, since I need to record the year
for (j in inspectaMonth){
MONTHkrill = dplyr::filter(krillYEAR,grepl(paste0("-",j,"-"),date.YMD))
MONTHsum = sum(MONTHkrill$Lipids,na.rm=TRUE)
MONTHmean = MONTHsum/length(MONTHkrill$date.YMD)
MONTHsd = sd(MONTHkrill$Lipids,na.rm=TRUE)
seasonalLipids = rbind(seasonalLipids,c(i,MONTHmean,j,MONTHsd))
}
}
colnames(seasonalLipids) = c("Year","Lipids","Month","SD")
seasonalLipids$Lipids = as.numeric(seasonalLipids$Lipids)
seasonalLipids$Month = as.factor(seasonalLipids$Month)
seasonalLipids$SD = as.numeric(seasonalLipids$SD)
seasonalLipids[seasonalLipids==0] = NA
krillCocktail = ggplot(seasonalLipids,aes(x=Year,y=Lipids,fill=Month)) +
geom_bar(stat="identity",position=position_dodge(0.9)) +
scale_fill_discrete(labels=allMonthsLong[as.numeric(inspectaMonth)]) +
geom_errorbar(aes(ymin=Lipids,ymax=Lipids+SD),position=position_dodge(0.9),width=0.2) +
ggtitle("Mean omega-3 Content of Krill Stomachs") +
labs(y="Mean Omega-3 Content (mg)")
krillCocktail
View(krill)
install.packages("shinyWidgets")
install.packages("leaflet")
install.packages("leaflet")
# set 'path.nm' to user's working directory
path.nm <- '~/placement/alfred-wegener/Bettina Meyer/data/penguin_diet'
# set 'path.nm' to user's working directory
path.nm <- '~/placement/alfred-wegener/Bettina Meyer/data/penguin_diet'
setwd(paste(path.nm,sep=''))
juv.l <- 30 # krill length in mm defined as <= juveniles
# krill juv.l of 30, 35, 38, 40, 44 can be run without code modification
nareas <- 1 # no. sampling strata, must be 1 or 4
nlegs <- 1  # no. sampling legs, must be 1 or 2
nages <- 7  # number of age classes
site.nm <- c('COPA','CS')
geo <- c('481S','481N')
if(!dir.exists(paste('plots_',juv.l,'mm',sep=''))){
dir.create('propRec_csvs')
dir.create(paste('plots_',juv.l,'mm',sep=''))
}
path.s <- paste(path.nm,'r-scripts/',sep='')
path.dat <- paste(path.nm,'data/',sep='')
path.out <- paste(path.nm,'propRec_csvs/',sep='')
source(paste(path.s,'6_amlr_peng.r',sep='')) # AERD penguins
source(paste(path.s,'7_plot_propRec.r',sep='')) # plot proportional recruitments
path.s
path.s <- paste(path.nm)
path.s
# set 'path.nm' to user's working directory
path.nm <- '~/placement/alfred-wegener/Bettina Meyer/data/penguin_diet/'
setwd(paste(path.nm,sep=''))
juv.l <- 30 # krill length in mm defined as <= juveniles
# krill juv.l of 30, 35, 38, 40, 44 can be run without code modification
nareas <- 1 # no. sampling strata, must be 1 or 4
nlegs <- 1  # no. sampling legs, must be 1 or 2
nages <- 7  # number of age classes
site.nm <- c('COPA','CS')
geo <- c('481S','481N')
if(!dir.exists(paste('plots_',juv.l,'mm',sep=''))){
dir.create('propRec_csvs')
dir.create(paste('plots_',juv.l,'mm',sep=''))
}
path.s <- paste(path.nm)
path.dat <- paste(path.nm)
path.out <- paste(path.nm,'propRec_csvs/',sep='')
source(paste(path.s,'6_amlr_peng.r',sep='')) # AERD penguins
source(paste(path.s,'7_plot_propRec.r',sep='')) # plot proportional recruitments
# Krill stats
source("prerequisites.R")
# Krill stats
source("prerequisites.R")
setwd("~/placement/alfred-wegener/Bettina Meyer/data")
# Krill stats
source("prerequisites.R")
inspectaMonth = readline(prompt="Months: ") %>%
strsplit("[[:space:]]") %>%
unlist()
seasonalLipids = data.frame()
for (i in years){
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD)) #Filter into one year, since I need to record the year
for (j in inspectaMonth){
MONTHkrill = dplyr::filter(krillYEAR,grepl(paste0("-",j,"-"),date.YMD))
MONTHsum = sum(MONTHkrill$Lipids,na.rm=TRUE)
MONTHmean = MONTHsum/length(MONTHkrill$date.YMD)
MONTHsd = sd(MONTHkrill$Lipids,na.rm=TRUE)
seasonalLipids = rbind(seasonalLipids,c(i,MONTHmean,j,MONTHsd))
}
}
colnames(seasonalLipids) = c("Year","Lipids","Month","SD")
seasonalLipids$Lipids = as.numeric(seasonalLipids$Lipids)
seasonalLipids$Month = as.factor(seasonalLipids$Month)
seasonalLipids$SD = as.numeric(seasonalLipids$SD)
seasonalLipids[seasonalLipids==0] = NA
krillCocktail = ggplot(seasonalLipids,aes(x=Year,y=Lipids,fill=Month)) +
geom_bar(stat="identity",position=position_dodge(0.9)) +
scale_fill_discrete(labels=allMonthsLong[as.numeric(inspectaMonth)]) +
geom_errorbar(aes(ymin=Lipids,ymax=Lipids+SD),position=position_dodge(0.9),width=0.2) +
ggtitle("Mean omega-3 Content of Krill Stomachs") +
labs(y="Mean Omega-3 Content (mg)")
krillCocktail
library(readr)
AERD_KRILL_LF_DATA <- read_csv("penguin_diet/AERD_KRILL_LF_DATA.csv")
View(AERD_KRILL_LF_DATA)
# set 'path.nm' to user's working directory
path.nm <- '~/placement/alfred-wegener/Bettina Meyer/data/penguin_diet/'
setwd(paste(path.nm,sep=''))
juv.l <- 30 # krill length in mm defined as <= juveniles
# krill juv.l of 30, 35, 38, 40, 44 can be run without code modification
nareas <- 1 # no. sampling strata, must be 1 or 4
nlegs <- 1  # no. sampling legs, must be 1 or 2
nages <- 7  # number of age classes
site.nm <- c('COPA','CS')
geo <- c('481S','481N')
if(!dir.exists(paste('plots_',juv.l,'mm',sep=''))){
dir.create('propRec_csvs')
dir.create(paste('plots_',juv.l,'mm',sep=''))
}
path.s <- paste(path.nm)
path.dat <- paste(path.nm)
path.out <- paste(path.nm,'propRec_csvs/',sep='')
source(paste(path.s,'6_amlr_peng.r',sep='')) # AERD penguins
source(paste(path.s,'7_plot_propRec.r',sep='')) # plot proportional recruitments
# set 'path.nm' to user's working directory
path.nm <- '~/placement/alfred-wegener/Bettina Meyer/data/penguin_diet/'
setwd(paste(path.nm,sep=''))
juv.l <- 30 # krill length in mm defined as <= juveniles
# krill juv.l of 30, 35, 38, 40, 44 can be run without code modification
nareas <- 1 # no. sampling strata, must be 1 or 4
nlegs <- 1  # no. sampling legs, must be 1 or 2
nages <- 7  # number of age classes
site.nm <- c('COPA','CS')
geo <- c('481S','481N')
if(!dir.exists(paste('plots_',juv.l,'mm',sep=''))){
dir.create('propRec_csvs')
dir.create(paste('plots_',juv.l,'mm',sep=''))
}
path.s <- paste(path.nm)
path.dat <- paste(path.nm)
path.out <- paste(path.nm,'propRec_csvs/',sep='')
p.diets <- read.csv(paste(path.dat,'AERD_KRILL_LF_DATA.csv',sep=''))
p.diets <- read.csv(paste(path.dat,'AERD_KRILL_LF_DATA.csv',sep='')) #'*Green*
remove(p.diets)
p.diets <- read.csv(paste(path.dat,'AERD_KRILL_LF_DATA.csv',sep='')) #'*Loads the penguin diet data*
if (nareas ==1 & nlegs == 1) names.area <- names.leg <- "combi"
sqkm.areas <- c(43865,18151,24479,38524) # what area is this defining?
if (nareas ==1 & nlegs == 1) names.area <- names.leg <- "combi" #what does combi mean?
if (nareas == 4)
names(sqkm.areas) <- names.area <- c("EI","JI","SA","WA")
sqkm.all <- sum(sqkm.areas)
n.y <- tapply(p.diets$SAMPLE_ID,list(p.diets$SAMPLE_YEAR),
function(x){length(unique(x))})
n.y
n.y.mo <- tapply(p.diets$SAMPLE_ID,list(p.diets$SAMPLE_YEAR,p.diets$SAMPLE_MONTH),
function(x){length(unique(x))})
n.y.mo
peng.nsmpl <- as.numeric(tapply(p.diets$KRILL_LENGTH,list(p.diets$SAMPLE_ID),
length)) # total number measured in SAMPLE_ID
peng.nsmpl.2D <- as.data.frame(cbind(peng.nsmpl,unique(p.diets$SAMPLE_ID)))
View(peng.nsmpl.2D)
p.diets$amount <- NA # set up totals per sample_id column
amount <- aggregate(p.diets$KRILL_LENGTH,list(p.diets$SAMPLE_ID),length)
View(amount)
install.packages("prettydoc")
# Krill stats
setwd("~/placement/alfred-wegener/Bettina Meyer/data")
library(prettydoc)
install.packages("rmdformats")
source("prerequisites.R")
krill4disp = dplyr::filter(krill,Size>0)
kable(head(krill4disp[1:6,8:9]),"simple")
source("prerequisites.R")
krill4disp = dplyr::filter(krill,Size>0)
krill4disp = subset(krill4disp,select=-c(RawKrill_Evaporation_Moisture_perc))
kable(head(krill4disp[1:9]),"simple")
source("prerequisites.R")
krill4disp = dplyr::filter(krill,Size>0)
krill4disp = subset(krill4disp,select=-c(RawKrill_Evaporation_Moisture_perc))
kable(head(krill4disp[1:8]),"simple")
# Krill stats
setwd("~/placement/alfred-wegener/Bettina Meyer/data")
source("prerequisites.R")
inspectaMonth = readline(prompt="Months: ") %>%
strsplit("[[:space:]]") %>%
unlist()
seasonalLipids = data.frame()
for (i in years){
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD)) #Filter into one year, since I need to record the year
for (j in inspectaMonth){
MONTHkrill = dplyr::filter(krillYEAR,grepl(paste0("-",j,"-"),date.YMD))
MONTHsum = sum(MONTHkrill$Lipids,na.rm=TRUE)
MONTHmean = MONTHsum/length(MONTHkrill$date.YMD)
MONTHsd = sd(MONTHkrill$Lipids,na.rm=TRUE)
seasonalLipids = rbind(seasonalLipids,c(i,MONTHmean,j,MONTHsd))
}
}
colnames(seasonalLipids) = c("Year","Lipids","Month","SD")
seasonalLipids$Lipids = as.numeric(seasonalLipids$Lipids)
seasonalLipids$Month = as.factor(seasonalLipids$Month)
seasonalLipids$SD = as.numeric(seasonalLipids$SD)
seasonalLipids[seasonalLipids==0] = NA
library(ggpubr)
# Kruskal-Wallis test ####
ggboxplot(seasonalLipids, x="Year", y="Lipids",
ylab="Mean lipid content", xlab="Year")
# Kruskal-Wallis test ####
kruskal.test(Lipids~Year, seasonalLipids)
seasonalLipids = data.frame()
for (i in years){
krillYEAR = dplyr::filter(krill,grepl(as.character(i),date.YMD)) #Filter into one year, since I need to record the year
for (j in inspectaMonth){
MONTHkrill = dplyr::filter(krillYEAR,grepl(paste0("-",j,"-"),date.YMD))
MONTHsum = sum(MONTHkrill$Lipids,na.rm=TRUE)
MONTHmean = MONTHsum/length(MONTHkrill$date.YMD)
MONTHsd = sd(MONTHkrill$Lipids,na.rm=TRUE)
seasonalLipids = rbind(seasonalLipids,c(i,MONTHmean,j,MONTHsd,MONTHsum))
}
}
colnames(seasonalLipids) = c("Year","Lipids","Month","SD","Total")
seasonalLipids$Total = as.numeric(seasonalLipids$Total)
colnames(seasonalLipids) = c("Year","Lipids","Month","SD","Total")
seasonalLipids$Lipids = as.numeric(seasonalLipids$Lipids)
seasonalLipids$Month = as.factor(seasonalLipids$Month)
seasonalLipids$SD = as.numeric(seasonalLipids$SD)
seasonalLipids$Total = as.numeric(seasonalLipids$Total)
seasonalLipids[seasonalLipids==0] = NA
krillCocktailSum = ggplot(seasonalLipids,aes(x=Year,y=Total,fill=Month)) +
geom_bar(stat="identity",position=position_dodge(0.9)) +
scale_fill_discrete(labels=allMonthsLong[as.numeric(inspectaMonth)]) +
ggtitle("Total omega-3 Content of Krill Stomachs") +
labs(y="Total Omega-3 Content (mg)")
krillCocktailSum
krillCocktail = ggplot(seasonalLipids,aes(x=Year,y=Lipids,fill=Month)) +
geom_bar(stat="identity",position=position_dodge(0.9)) +
scale_fill_discrete(labels=allMonthsLong[as.numeric(inspectaMonth)]) +
geom_errorbar(aes(ymin=Lipids,ymax=Lipids+SD),position=position_dodge(0.9),width=0.2) +
ggtitle("Mean omega-3 Content of Krill Stomachs") +
labs(y="Mean Omega-3 Content (mg)")
krillCocktail
kruskal.test(Total~Year, seasonalLipids)
# Kruskal-Wallis test ####
kruskal.test(Lipids~Year,seasonalLipids) # p-val > 0.05. No significant difference between mean lipid content of years
install.packages("anyflights")
library(anyflights)
stnflights22 = anyflights("STN",2022)
get_airports()
airports = get_airports()
View(airports)
remove(airports)
library(sf)
bremerhaven = read_sf("bremerhaven.osm.shp")
